type Query {
  heroes: [Hero]
}

# Object and fields

type Hero {
  id: ID!
  name: String
  description: String
}

# Arguments

type HeroÂ {
  id: ID!
  movies(count: Int): [Movie]
}

type Movie {
  title: String
}


# Scalar Types

Int
String
Float
Boolean
ID

# Enumeration

enum Publisher {
  MARVEL
  DC
}

# Interfaces

interface Character {
  id: ID!
  name: String!
  movies: [Movie]!
}

type Hero implements Charachter {
  id: ID!
  name: String!
  movies: [Movie]!
  power: String!
  alias: String!
}


# Union types

union SearchResult = Human | Hero

# Input types

input FilterInput {
  alias: String
  movieName: String
}